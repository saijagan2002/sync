# -*- coding: utf-8 -*-
"""sync_task_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xoZgagMCFc-b9blitqJJ9nmY0FrZhVKU
"""

import random
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.linear_model import LogisticRegression

# Define the training data
training_data = [
    ["What's the weather like today?", "weather"],
    ["Tell me a joke.", "joke"],
    ["What's your name?", "name"],
    ["How old are you?", "age"],
    ["What time is it?", "time"],
    ["Who won the last World Cup?", "worldcup"],
    ["What's the capital of France?", "capital"],
    ["How do I get to the nearest library?", "directions"],
    ["What's the meaning of life?", "meaning"],
    ["Tell me a fun fact.", "fact"],
    ["Hi","hi"]
]

# Preprocess the training data
corpus = [data[0] for data in training_data]
labels = [data[1] for data in training_data]
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(corpus)

# Train the intent recognition model
model = LogisticRegression()
model.fit(X, labels)

# Define responses for each intent
responses = {
    "weather": "The weather is sunny today.",
    "joke": "Why don't scientists trust atoms? Because they make up everything!",
    "name": "My name is ChatBot.",
    "age": "I am a virtual assistant, so I don't have an age.",
    "time": "The current time is 12:30 PM.",
    "worldcup": "France won the last World Cup.",
    "capital": "The capital of France is Paris.",
    "directions": "To get to the nearest library, take a left from the main road.",
    "meaning": "The meaning of life is subjective and can vary for each individual.",
    "fact": "Did you know that the world's oldest known vegetable is the pea?",
    "hi": "Hi! How are you?"
}

# Function to predict intent and generate a response
def chatbot(query):
    query_vector = vectorizer.transform([query])
    intent = model.predict(query_vector)[0]
    if intent in responses:
        return responses[intent]
    else:
        return "I'm sorry, I don't understand that question."

# Example usage
print("ChatBot: Hi, how can I help you?")
while True:
    user_query = input("User: ")whate
    if user_query.lower() == 'bye':
        print("ChatBot: Goodbye! Have a great day.")
        break

    bot_response = chatbot(user_query)
    print("ChatBot:", bot_response)